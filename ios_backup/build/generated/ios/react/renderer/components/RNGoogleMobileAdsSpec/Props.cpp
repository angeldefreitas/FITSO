
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNGoogleMobileAdsSpec/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

RNGoogleMobileAdsBannerViewProps::RNGoogleMobileAdsBannerViewProps(
    const PropsParserContext &context,
    const RNGoogleMobileAdsBannerViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    sizeConfig(convertRawProp(context, rawProps, "sizeConfig", sourceProps.sizeConfig, {})),
    unitId(convertRawProp(context, rawProps, "unitId", sourceProps.unitId, {})),
    request(convertRawProp(context, rawProps, "request", sourceProps.request, {})),
    manualImpressionsEnabled(convertRawProp(context, rawProps, "manualImpressionsEnabled", sourceProps.manualImpressionsEnabled, {false})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName RNGoogleMobileAdsBannerViewProps::getDiffPropsImplementationTarget() const {
  return "RNGoogleMobileAdsBannerView";
}

folly::dynamic RNGoogleMobileAdsBannerViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = RNGoogleMobileAdsBannerViewProps();
  const RNGoogleMobileAdsBannerViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const RNGoogleMobileAdsBannerViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (sizeConfig != oldProps->sizeConfig) {
    result["sizeConfig"] = toDynamic(sizeConfig);
  }
    
  if (unitId != oldProps->unitId) {
    result["unitId"] = unitId;
  }
    
  if (request != oldProps->request) {
    result["request"] = request;
  }
    
  if (manualImpressionsEnabled != oldProps->manualImpressionsEnabled) {
    result["manualImpressionsEnabled"] = manualImpressionsEnabled;
  }
  return result;
}
#endif
RNGoogleMobileAdsMediaViewProps::RNGoogleMobileAdsMediaViewProps(
    const PropsParserContext &context,
    const RNGoogleMobileAdsMediaViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    responseId(convertRawProp(context, rawProps, "responseId", sourceProps.responseId, {})),
    resizeMode(convertRawProp(context, rawProps, "resizeMode", sourceProps.resizeMode, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName RNGoogleMobileAdsMediaViewProps::getDiffPropsImplementationTarget() const {
  return "RNGoogleMobileAdsMediaView";
}

folly::dynamic RNGoogleMobileAdsMediaViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = RNGoogleMobileAdsMediaViewProps();
  const RNGoogleMobileAdsMediaViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const RNGoogleMobileAdsMediaViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (responseId != oldProps->responseId) {
    result["responseId"] = responseId;
  }
    
  if (resizeMode != oldProps->resizeMode) {
    result["resizeMode"] = resizeMode;
  }
  return result;
}
#endif
RNGoogleMobileAdsNativeViewProps::RNGoogleMobileAdsNativeViewProps(
    const PropsParserContext &context,
    const RNGoogleMobileAdsNativeViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    responseId(convertRawProp(context, rawProps, "responseId", sourceProps.responseId, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName RNGoogleMobileAdsNativeViewProps::getDiffPropsImplementationTarget() const {
  return "RNGoogleMobileAdsNativeView";
}

folly::dynamic RNGoogleMobileAdsNativeViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = RNGoogleMobileAdsNativeViewProps();
  const RNGoogleMobileAdsNativeViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const RNGoogleMobileAdsNativeViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (responseId != oldProps->responseId) {
    result["responseId"] = responseId;
  }
  return result;
}
#endif

} // namespace facebook::react
